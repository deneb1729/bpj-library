name: deploy application

on:
  push:
    branches:
      - "develop"

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: supersecret
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/testing
      DJANGO_HOSTS: localhost,127.0.0.1
      EMAIL_HOST: email.fakehost.io
      EMAIL_HOST_USER: fakeuser
      EMAIL_HOST_PASSWORD: fakepwd
      EMAIL_PORT: 2525
    services:
      postgres:
        image: postgres:11-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testing
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: set up python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit pylint
          if [ requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Runing pre-commit hooks
        run: |
          pre-commit install
          pre-commit run -a
      - name: Runing tests
        run: |
          python3 manage.py migrate
          python3 manage.py test --settings=library.settings_test -v 1
      - name: Success message
        run: echo finished working successfully!

  deploy:
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.10.9
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP}}
          heroku_email: ${{secrets.EMAIL_DEPLOY}}
          usedocker: true
          docker_heroku_process_type: web
          healthcheck: https://${{secrets.HEROKU_APP}}.herokuapp.com/health/
          delay: 30
          rollbackonhealthcheckfailed: true
      - name: Success message
        run: echo Deploy successfully!

  dast:
    needs: deploy
    runs-in: ubuntu-latest
    steps:
      - name: OWASP ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.2.0
        with:
          target: "https://${{secrets.HEROKU_APP}}.herokuapp.com"
